@using Domain.Entities
@code {
    [Parameter] public EventCallback<Operation> OnOperationAdded { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private Operation NewOperation = new Operation();

    private async Task HandleValidSubmit()
    {
        await OnOperationAdded.InvokeAsync(NewOperation);
        NewOperation = new Operation();
    }
}

<EditForm Model="NewOperation" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" class="form-control" @bind-Value="NewOperation.Name" />
    </div>

    <div class="form-group">
        <label for="order">Order</label>
        <InputNumber id="order" class="form-control" @bind-Value="NewOperation.OrderInWhichToPerform" />
    </div>

    <button type="submit" class="btn btn-primary">Add Operation</button>
    <button type="button" class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
</EditForm>
