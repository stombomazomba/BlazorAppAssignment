
@code {
    [Parameter]
    public EventCallback<Device> OnDeviceAdded { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    private Device NewDevice = new Device();

    private async Task HandleValidSubmit()
    {
        await OnDeviceAdded.InvokeAsync(NewDevice);
        NewDevice = new Device();
    }
}

<EditForm Model="NewDevice" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" class="form-control" @bind-Value="NewDevice.Name" />
    </div>

    <div class="form-group">
        <label for="type">Device Type</label>
        <InputSelect id="type" class="form-control" @bind-Value="NewDevice.DeviceType">
            <option value="">Select Device Type</option>
            @foreach (var type in Enum.GetValues(typeof(DeviceType)))
            {
                <option value="@type">@type</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Add Device</button>
    <button type="button" class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
</EditForm>

